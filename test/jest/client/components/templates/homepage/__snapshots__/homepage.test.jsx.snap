// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomePage should render HomePage 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div
    className="container"
>
    <div
        className="section"
    >
        <FrontPageHero />
    </div>
    <div
        className="sectionWithPadding"
    >
        <MenuTileCollection
            data={Array []}
            icons={Object {}}
            neverDisplayChildrenOnHoverOverride={false}
            pathname="/"
            splitTitle={true}
            uppercaseFirstWord={false}
        />
        <Connect(HappeningNow) />
    </div>
    <div
        className="sectionWithPadding last"
    >
        <Connect(Blog) />
    </div>
</div>,
  "nodes": Array [
    <div
      className="container"
>
      <div
            className="section"
      >
            <FrontPageHero />
      </div>
      <div
            className="sectionWithPadding"
      >
            <MenuTileCollection
                  data={Array []}
                  icons={Object {}}
                  neverDisplayChildrenOnHoverOverride={false}
                  pathname="/"
                  splitTitle={true}
                  uppercaseFirstWord={false}
            />
            <Connect(HappeningNow) />
      </div>
      <div
            className="sectionWithPadding last"
      >
            <Connect(Blog) />
      </div>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <Homepage
        location={
                Object {
                        "pathname": "/",
                      }
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": Homepage {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "location": Object {
            "pathname": "/",
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div
          className="container"
>
          <div
                    className="section"
          >
                    <FrontPageHero />
          </div>
          <div
                    className="sectionWithPadding"
          >
                    <MenuTileCollection
                              data={Array []}
                              icons={Object {}}
                              neverDisplayChildrenOnHoverOverride={false}
                              pathname="/"
                              splitTitle={true}
                              uppercaseFirstWord={false}
                    />
                    <Connect(HappeningNow) />
          </div>
          <div
                    className="sectionWithPadding last"
          >
                    <Connect(Blog) />
          </div>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div
          className="container"
>
          <div
                    className="section"
          >
                    <FrontPageHero />
          </div>
          <div
                    className="sectionWithPadding"
          >
                    <MenuTileCollection
                              data={Array []}
                              icons={Object {}}
                              neverDisplayChildrenOnHoverOverride={false}
                              pathname="/"
                              splitTitle={true}
                              uppercaseFirstWord={false}
                    />
                    <Connect(HappeningNow) />
          </div>
          <div
                    className="sectionWithPadding last"
          >
                    <Connect(Blog) />
          </div>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <Homepage
    location={
        Object {
            "pathname": "/",
          }
    }
/>,
}
`;
