# Environment Variables required to be set in circleci web config
#
# AMAZON_ECR_ENDPOINT_LOWER=url-for-lower-ECR
# AMAZON_ECR_REPO=repo-name-within-ECR
# LOWER_AWS_KEY=
# LOWER_AWS_SECRET=
#
#
### Deployment Workflows:
#
# Push to Branch     | Deploy to Environment
# ------------------ | ---------------------
# integration        | mint
# staging            | staging
# master             | HOLD -> prod
#

version: 2.1

orbs:
  cypress: cypress-io/cypress@1
  snyk: snyk/snyk@0.0.8

executors:
  node:
    docker:
    - image: cimg/node:12.18
  node-browsers:
    docker:
    - image: cimg/node:12.18-browsers
  python:
    docker:
    - image: cimg/python:3.9

commands:
  install-aws:
    steps:
      - run:
          name: install aws
          command: |
            pip install awscli
  restore-npm-cache:
    steps:
      - restore_cache:
          keys:
          - v1-npm-{{ checksum "package-lock.json" }}
  save-npm-cache:
    steps:
      - save_cache:
          paths:
            - ./node_modules
          key: v1-npm-{{ checksum "package-lock.json" }}

workflows:
  test-build-deploy:
    jobs:
    - cache-dependencies:
        filters:
          branches:
            only:
            - /.*/
          tags:
            only:
            - mint
            - demo
            - venus
            - /deploy-\w+/
            - staging
            - production
    - test-jest:
        requires:
          - cache-dependencies
        filters:
          branches:
            only:
            - /.*/
          tags:
            only:
            - /.*/
    - test-mocha:
        requires: 
          - cache-dependencies
        filters:
          branches:
            only:
            - /.*/
          tags:
            only:
            - /.*/
    - test-cypress:
        requires: 
          - cache-dependencies
        filters:
          branches:
            only:
            - /.*/
          tags:
            only:
            - /.*/
        context: sba-gov-lower
    - build-webpack:
        requires: [test-jest, test-mocha, test-cypress]
        filters:
          branches:
            only:
            - master
            - /[Ff]eature-\w+-\d+[-\w]*/
          tags:
            only:
            - production
            - staging
            - mint
            - demo
            - venus
            - /deploy-\w+/
    - build-package:
        requires: [build-webpack]
        filters:
          branches:
            only:
            - master
            - /[Ff]eature-\w+-\d+[-\w]*/
          tags:
            only:
            - production
            - staging
            - mint
            - demo
            - venus
            - /deploy-\w+/
    - upload-assets:
        requires: [build-package]
        filters:
          branches:
            only:
            - master
          tags:
            only:
            - mint
            - qa
            - demo
            - venus
        context: sba-gov-lower
    - deploy-package:
        requires: [upload-assets]
        filters:
          branches: 
            only:
            - master
          tags:
            only:
            - mint
            - qa
            - venus
            - demo
        context: sba-gov-lower
    - deploy-package:
        name: "deploy-package-without-assets"
        requires: [build-package]
        filters:
          branches:
            ignore:
            - /.*/
          tags:
            only:
            - /deploy-\w+/
        context: sba-gov-lower
    - hold:
        type: approval
        requires: [build-package]
        filters:
          branches:
            ignore:
            - /.*/
          tags:
            only:
            - production
            - staging
    - upload-assets-with-approval:
        requires: [hold]
        filters:
          branches: 
            ignore:
            - /.*/
          tags:
            only:
            - staging
            - production
        context: sba-gov-upper
    - deploy-package-with-approval:
        requires: [upload-assets-with-approval]
        filters:
          branches: 
            ignore:
            - /.*/
          tags:
            only:
            - staging
            - production
        context: sba-gov-upper
jobs:
  cache-dependencies:
    executor: node
    steps:
      - checkout
      - restore-npm-cache
      - run:
          name: install dependencies
          command: |
            npm install --silent --no-save
      - save-npm-cache
  test-jest:
    executor: node
    steps:
      - checkout
      - restore-npm-cache
      - run:
          name: run jest
          command: |
            npm run test-jest
  test-mocha:
    executor: node
    steps:
      - checkout
      - restore-npm-cache
      - run:
          name: run mocha
          command: |
            npm run test-mocha
  test-cypress:
    executor: node-browsers
    steps:
      - checkout
      - restore-npm-cache
      - run:
          name: run cypress
          command: |
            npm run cy-server-test
  build-webpack:
    executor: node
    steps:
    - checkout
    - restore-npm-cache
    - run:
        name: build webpack
        command: |
          npm run build
    - save_cache:
        paths:
        - ./public/build
        - ./dist
        key: v5-webpack-{{ .Revision }}
  build-package:
    working_directory: /home/circleci/project
    executor: node
    steps:
      - checkout
      - restore-npm-cache
      - run:
          name: create zip package
          command: |
            npm run make-lambda-package
      - persist_to_workspace:
          root: workspace
          paths:
            - katana-lambda.zip
            - build
            - assets
  upload-assets:
    executor: python
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - install-aws
      - run:
          name: publish
          command: |
            if [ -z "${CIRCLE_BRANCH}" ]
            then
              ENVIRONMENT=${CIRCLE_TAG}
            else
              ENVIRONMENT=${CIRCLE_BRANCH}
            fi

            export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
            export AWS_DEFAULT_OUTPUT=${AWS_DEFAULT_OUTPUT:-json}

            if [ "$ENVIRONMENT" == "master" ]	
            then	
              ENVIRONMENT=mint	
            fi	

            case $ENVIRONMENT in	
              mint)	
                export ASSET_BUCKET_NAME_PREFIX=mint.ussba.io	
                ;;
              demo)
                export ASSET_BUCKET_NAME_PREFIX=demo.ussba.io
                ;;
              venus)
                export ASSET_BUCKET_NAME_PREFIX=venus.ussba.io
                ;;
              int-bl)
                export ASSET_BUCKET_NAME_PREFIX=brian.ussba.io
                ;;
              *)
                export ASSET_BUCKET_NAME_PREFIX=${ENVIRONMENT}
                ;;
            esac

            aws s3 sync workspace/build/ s3://${ASSET_BUCKET_NAME_PREFIX}-assets/build/
            aws s3 sync workspace/assets/ s3://${ASSET_BUCKET_NAME_PREFIX}-assets/assets/

  deploy-package:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - deploy:
          name: deploy
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "main" ]; then
              # main branch, autodeploy mint
              TARGET_ENVIRONMENT=mint
            elif [ ! -z "${CIRCLE_TAG}" ]; then
              # Tag exists, deploy tag, stripping 'deploy-' prefix if it exists
              TARGET_ENVIRONMENT=${CIRCLE_TAG}
              TARGET_ENVIRONMENT=$(echo $TARGET_ENVIRONMENT | sed 's/^deploy-//')
            else
              # No tag, not main branch... just leave
              echo "ERROR: No tag and not on main branch.  Aborting serverless deploy, check workflow settings"
              exit 1
            fi

            sudo npm i -g serverless
            serverless deploy --stage ${TARGET_ENVIRONMENT}
  upload-assets-with-approval:
    executor: python
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - install-aws
      - run:
          name: publish
          command: |
            if [ -z "${CIRCLE_BRANCH}" ]
            then
              ENVIRONMENT=${CIRCLE_TAG}
            else
              ENVIRONMENT=${CIRCLE_BRANCH}
            fi
            export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION:-us-east-1}
            export AWS_DEFAULT_OUTPUT=${AWS_DEFAULT_OUTPUT:-json}
            SOURCE_PREFIX=${ENVIRONMENT}
            case $ENVIRONMENT in
              production)
                export ASSET_BUCKET_NAME_PREFIX=www.sba.gov
                ;;
              *)
                export ASSET_BUCKET_NAME_PREFIX=staging.sba.gov
                ;;
            esac
            aws s3 sync workspace/build/ s3://${ASSET_BUCKET_NAME_PREFIX}-assets/build/
            aws s3 sync workspace/assets/ s3://${ASSET_BUCKET_NAME_PREFIX}-assets/assets/
  deploy-package-with-approval:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - deploy:
          name: deploy
          command: |

            sudo npm i -g serverless
            serverless deploy --stage ${CIRCLE_TAG}
